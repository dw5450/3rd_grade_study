  소스.cpp
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(3485): error C2678: 이항 '==': 왼쪽 피연산자로 'int' 형식을 사용하는 연산자가 없거나 허용되는 변환이 없습니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\system_error(370): note: 'bool std::operator ==(const std::error_condition &,const std::error_condition &) noexcept'일 수 있습니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\system_error(364): note: 또는       'bool std::operator ==(const std::error_condition &,const std::error_code &) noexcept'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\system_error(358): note: 또는       'bool std::operator ==(const std::error_code &,const std::error_condition &) noexcept'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\system_error(352): note: 또는       'bool std::operator ==(const std::error_code &,const std::error_code &) noexcept'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\exception(329): note: 또는       'bool std::operator ==(const std::exception_ptr &,std::nullptr_t) noexcept'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\exception(324): note: 또는       'bool std::operator ==(std::nullptr_t,const std::exception_ptr &) noexcept'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\exception(319): note: 또는       'bool std::operator ==(const std::exception_ptr &,const std::exception_ptr &) noexcept'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(3485): note: 또는       '기본 제공 C++ 연산자==(void (__cdecl *)(int &), void (__cdecl *)(int &))'일 수 있습니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(3485): note: 또는       '기본 제공 C++ 연산자==(void (__stdcall *)(int &), void (__stdcall *)(int &))'일 수 있습니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(3485): note: 또는       '기본 제공 C++ 연산자==(void (__fastcall *)(int &), void (__fastcall *)(int &))'일 수 있습니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(3485): note: 또는       '기본 제공 C++ 연산자==(void (__vectorcall *)(int &), void (__vectorcall *)(int &))'일 수 있습니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(3485): note: 인수 목록 '(int, const main::<lambda_983f10ef0cb79c587cef068a33d89784>)'을(를) 일치시키는 동안
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(3498): note: 컴파일 중인 함수 템플릿 인스턴스화 '_InIt std::_Find_unchecked1<_InIt,_Ty>(_InIt,const _InIt,const _Ty &,std::false_type)'에 대한 참조를 확인하십시오.
          with
          [
              _InIt=std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<int>>>,
              _Ty=main::<lambda_983f10ef0cb79c587cef068a33d89784>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(3507): note: 컴파일 중인 함수 템플릿 인스턴스화 '_InIt std::_Find_unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,main::<lambda_983f10ef0cb79c587cef068a33d89784>>(const _InIt,const _InIt,const main::<lambda_983f10ef0cb79c587cef068a33d89784> &)'에 대한 참조를 확인하십시오.
          with
          [
              _InIt=std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<int>>>,
              _Ty=int
          ]
  c:\users\원동욱\desktop\3rd_grade_study\stl\practice\practice\소스.cpp(29): note: 컴파일 중인 함수 템플릿 인스턴스화 '_InIt std::find<std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,main::<lambda_983f10ef0cb79c587cef068a33d89784>>(_InIt,const _InIt,const main::<lambda_983f10ef0cb79c587cef068a33d89784> &)'에 대한 참조를 확인하십시오.
          with
          [
              _InIt=std::_List_iterator<std::_List_val<std::_List_simple_types<int>>>,
              _Ty=int
          ]
