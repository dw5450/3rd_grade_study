/////////////////////////////////////////////////////////////////////////////////////////////
//2018.04.16		STL (월 23 , 화 56)					 7주 1
//
//4장 순차컨테이너(sequence container)
//
//array, vector, deque, list, forward_list
//
//deque 앞과 뒤에서 입력과 출력이 가능
/////////////////////////////////////////////////////////////////////////////////////////////

#include <iostream>
#include <vector>
//다음 헤더는 실행시 지워야 할것입니다
#include "Model.h"							//모델을 사용할시 추가후 사용해 주세요
#include "save.h"
#include "funcSpeedCheck.h"
using namespace std;


//컨테이너에서 특정한 원소를 찾아보자

//반복자 f(반복자 b, 반복자 e, 값 v);

template <class Iter, class Val>
Iter f(Iter b, Iter e, Val v);

template <class Iter, class Val>
Iter f(Iter b, Iter e, Val v) {
	while (b != e){
		if (*b == v)
			return b;
		else
			++b;
	}
	return e;
}

int main()
{
	vector<int> v{ 1, 3, 5, 7, 8, 2, 4, 6, 8, 10 };

	//v에 19라는 원소가 있는지 찾아보시오.
	//반복해서 없을경우 end 반환 (vec의 마지막 값의 뒷자리)

	vector<int>::iterator p = f(v.begin(), v.end(), 19);

	if (p != v.end())
		cout << " 찾음" << endl;
	else
		cout << "원하는 값이 없다." << endl;

	
	//다음 명령어는 실행시 지워야 할 것 입니다.
	save("0416 vector에서나 나를 찾아보자.txt");					//저장할 파일명을 입력 해 주세요


}
