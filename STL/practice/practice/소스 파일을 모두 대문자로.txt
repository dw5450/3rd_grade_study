
/////////////////////////////////////////////////////////////////////////////////////////////
//2018.04.16		STL (월 23 , 화 56)					 7주 1
//
//
// 표준에 맞는 컨테이너와 반복자를 만들어보자
///////////////////////////////////////////////////////////////////////////////////////////////

#include <iostream>
#include <algorithm>
#include <iterator>
#include <fstream>
#include <string>


//다음 헤더는 실행시 지워야 할것입니다
//#include "Model.h"							//모델을 사용할시 추가후 사용해 주세요
#include "save.h"
using namespace std;

//원소를 수정하는 알고리즘

int main()
{
	//소스.cpp를 입력받아 영문자를 대문자로 변환하여 소스.cpp에 저장하라.
	//transform 함수 한 번 호출로 가능하다

	ifstream in("소스.cpp");
	ofstream  out("소스X.cpp");

	transform(istream_iterator<char>(in), istream_iterator<char>(in), ostream_iterator<char>(out), [](char c) { return toupper(c);});



	save("소스 파일을 모두 대문자로.txt");
}
/////////////////////////////////////////////////////////////////////////////////////////////
//2018.04.16		STL (월 23 , 화 56)					 7주 1
//
//
// 표준에 맞는 컨테이너와 반복자를 만들어보자
///////////////////////////////////////////////////////////////////////////////////////////////

#include <iostream>
#include <algorithm>
#include <iterator>
#include <fstream>
#include <string>


//다음 헤더는 실행시 지워야 할것입니다
//#include "Model.h"							//모델을 사용할시 추가후 사용해 주세요
#include "save.h"
using namespace std;

//원소를 수정하는 알고리즘

int main()
{
	//소스.cpp를 입력받아 영문자를 대문자로 변환하여 소스.cpp에 저장하라.
	//transform 함수 한 번 호출로 가능하다

	ifstream in("소스.cpp");
	ofstream  out("소스X.cpp");

	transform(istream_iterator<char>(in), istream_iterator<char>(in), ostream_iterator<char>(out), [](char c) { return toupper(c);});



	save("소스 파일을 모두 대문자로.txt");
}
/////////////////////////////////////////////////////////////////////////////////////////////
//2018.04.16		STL (월 23 , 화 56)					 7주 1
//
//
// 표준에 맞는 컨테이너와 반복자를 만들어보자
///////////////////////////////////////////////////////////////////////////////////////////////

#include <iostream>
#include <algorithm>
#include <iterator>
#include <fstream>
#include <string>


//다음 헤더는 실행시 지워야 할것입니다
//#include "Model.h"							//모델을 사용할시 추가후 사용해 주세요
#include "save.h"
using namespace std;

//원소를 수정하는 알고리즘

int main()
{
	//소스.cpp를 입력받아 영문자를 대문자로 변환하여 소스.cpp에 저장하라.
	//transform 함수 한 번 호출로 가능하다

	int a[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9 };
	int b[]{ 1,2,3,4,5,6,7,8,9,10, 11, 12 };
	int c[9];

	//a[] * b[] 한 결과를 화면에 출력해보세요

	ifstream in("소스.cpp");
	ofstream  out("소스X.cpp");

	transform(begin(a), end(a), begin(b), ostream_iterator<int>(cout, " "), [](int a, int b) {return a * b;});


	save("소스 파일을 모두 대문자로.txt");
}
/////////////////////////////////////////////////////////////////////////////////////////////
//2018.04.16		STL (월 23 , 화 56)					 7주 1
//
//
// 표준에 맞는 컨테이너와 반복자를 만들어보자
///////////////////////////////////////////////////////////////////////////////////////////////

#include <iostream>
#include <algorithm>
#include <numeric>
#include <iterator>
#include <fstream>
#include <string>


//다음 헤더는 실행시 지워야 할것입니다
//#include "Model.h"							//모델을 사용할시 추가후 사용해 주세요
#include "save.h"
using namespace std;

//원소를 수정하는 알고리즘

int main()
{
	int a[100];
	iota(begin(a), end(a), 1);

	for (int num : a)
		cout << num << " ";
	cout << endl;

	save("소스 파일을 모두 대문자로.txt");
}
