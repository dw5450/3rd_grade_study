/////////////////////////////////////////////////////////////////////////
//2018 년 3월 19일 STL
// 책 2장 - Utility functions
//minmax class dog 만들어서 해보기

// 추가 코드 : 여기서 무슨 문제가 생기는 지 생각해보고 
//////////////////////////////////////////////////////////////////////////////

#include <iostream>
#include "save.h"
#include <algorithm>
using namespace std;

//min, max, minmax

class Model
{
	char * data = nullptr;						//동적 할당한 메모리의 시작번지
	size_t size;						//메모리의 크기



public:
	Model() {
		cout << "default ctor" << endl;		//생성자 관찰
		}

	Model(int n) : size(n) {
		data = new char[n];
		cout << "ctor - "  << size << "바이트, 주소 : " << static_cast<void *>(data) << endl;		//생성자 관찰
	}

	Model(const Model & other_model)  {
		size = other_model.getSize_t();
		
		cout << "copy , size_t : " << this->size << endl;		//생성자 관찰
	}

	size_t getSize_t() const {return size;}

	~Model()
	{
		cout << "dtor - " << size << "바이트, 주소 :" << static_cast<void *>(data) << endl;		//생성자 관찰
		if(data != nullptr)
			delete [] data;
	}
};

int main()
{
	//Model a;
	//Model b{ 1000 };						//1000바이트 확보
	//Model c = b;							//추가한 코드	

	{
		Model a{ 1111 };
	}
	Model b{ 3333 };
	Model c{ 7777 };
	
	save();
	cout << "메인이 끝남" << endl;
	
};

