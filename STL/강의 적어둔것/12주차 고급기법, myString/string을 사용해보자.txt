
/////////////////////////////////////////////////////////////////////////////////////////////
//2018.04.16		STL (월 23 , 화 56)					 7주 1
//
//
// 표준에 맞는 컨테이너와 반복자를 만들어보자
///////////////////////////////////////////////////////////////////////////////////////////////

#include <iostream>

//다음 헤더는 실행시 지워야 할것입니다
//#include "Model.h"							//모델을 사용할시 추가후 사용해 주세요
#include "save.h"
using namespace std;

class myString {
	int len{ 0 };
	char * p{ nullptr };
public:
	myString() {};
	myString(const char *);
	myString(const myString &);

	myString & operator=(const myString &);

	friend ostream & operator<< (ostream & os, const myString &);
};

myString::myString(const char * str)
{
	len = strlen(str);
	p = new char[strlen(str) + 1];
	strcpy_s(p, strlen(str) + 1, str);
}

myString::myString(const myString & str)
{
	p = new char[str.len + 1];
	strcpy_s(p, strlen(str.p) + 1, str.p);
}

ostream & operator<< (ostream & os, const myString & p)
{
	os << *p.p;
	return os;
}


int main()
{
	myString s{ "Hellow, world!" };			//char*, char[]를 대치하는 class
	myString s1 = s;

	cout << s1 << endl;
	//s += " STL 참 재미있다!";
	//cout << s.length() << endl;
	//cout << s.size() << endl;

	//char str[40]; 
	////strcpys(str, s.c_str());
	//cout << str << endl;

	

	save("string을 사용해보자.txt");

}
