네트워크
	a->b위치 같은 형식 인코딩 데이터 매체를 통해 전송
	
	데이터 인코딩 : 데이터를 디지털, 바이너리로 표현

	데이터 구분

		아날로그 : 연속적 데이터 (자연 데이터)

		디지털 : 비연속적 데이터 (0,1), 복구가 쉬움


	전송 방식 구분

		직렬 : 1bit ,Serial / 병렬 : 1byte  Parallel

		동기 (Synchronous)전송 : 동기화일때만 / 비동기(Asynchronous) 전송 : 구분 x
	
		단이중(Simplex) : 한쪽 방향, 모니터 / 반이중(Half-Duplex) : 양쪽 동시x , 무전기 / 
		전이중(Full-Duplex) : 양쪽 동시, 게임



전송 매체

	유선 매체

		동축 케이블 : 하나의 구리선, Tv 선

			thicknet	비싸고 두껍지만 멀리
			thinnet		싸고 얇지만 짧게

		Twisted Pair Media , UTP : 솔리드 코어 와이어가 꼬여서, 인터넷선 (STP는 EMI 방지용) < 대충 emp 방어가 된다고 보면 댐

		광섬유 케이블 : 신호를 빛을 통해, EMI 영향 x

	무선 매체 : 송신기 > 수신기 (별도의 커넥터가 없서)
		
		지상파 주파수 : 지상파 tv, radio <<kcc가 주파수 대역을 할당

		위성파 주파수 : 위성, 스카이 라이프

		적외선 통신 : 리모컨 > 약해

		전자파 통신 : 건물간 LAN 연결 


데이터 통신 모델 프레임 워크

	OSI

		물리 계층(L1) : 비트 전송, 전송 방식, 데이터 속도 정의

		데이터 링크 계층(L2) : 비트 <> 프레임, 노드 주소(Mac Address =  컴퓨터 주소) 정의
 
		네트워크 계층(L3) :ip주소(논리 주소), 패킷 생성(데이터의 제어 비트), 경로 탐색(최단거리 제공) ( IP)

		전송(Transport) 계층 (L4) : PORT 번호 (실행할 어플리 케이션 지정, 식별), 프로세스 대 프로세스로 전달 (TCP)
		
		새션 계층 (L5) : 동기화 관리

		표현 계층 (L6) : 암호화 , 인코딩

		응용 계층 (L7) : 응용 프로그램 지원

	L7 ~ L1 -> 라우터 > L1 ~ L7 순으로 전송

		
	TCP/IP(업계)
			
		네트워크 어드레스 층 : 물리 + 데이터 링크
		
		인터넷 층 : 네트워크 층
		
		guest to guest 층 : 전송 계층

		프로세스/앱 층 : 세션 계층, 표현 계층, 응용 계층

		

LAN : 서버(서비스 제공) <> 컴퓨터(제공 받음) 사이를 연경

종류

	Mainframes and Terminals 
		
		기능은 메임 프레임만, 비쌈, 슈퍼컴

	Peer to Peer
		
		모든 컴이 서버와 컴퓨터, 토렌트

	Client-dominant LANs
		
		기능은 클라이언트가 서버엔 데이터만, 배그가 핵이 많은 이유?

	분산 처리 LAN

		여러개의 서버, 처리 요구에 따라 확장 축소 가능 , 이번 소울 워커 사태때 테런 서버를 빼온 것 처럼
	



NETWORK INTERFACE CARD = 네트워크 어댑터, 네트워크 카드. NIC

	네트워크 장치와 LAN 사이의 인터페이스(네트워크에 접속하기위한 하드웨어, 소프트 웨어 적 규격을 정해줌)
	
	pc카드 ,usb 등 다양하게 제공 가능

	다양한 속도 (10mb ~ 10gbs), 다양한 아키텍처 (이더넷, FDDI, ATM)근데 거의 이더넷 ㅋ

	물리적 주소 정의랑 컴퓨터의 데이터를 전송 매체에 적합한 형식으로 변환시킴

	워크 스테이션 운영체제 (pc)랑 네트워크 운영체제를 통신할수 있게함 -> 윈도우는 둘 -다




LAN 토폴로지(topology : LAN의 맵, 레이아웃 (형태)


	논리적 구분
	
	버스 : 모두가 공유

	스타 : 1:1로 쏴줌

	
	물리적 구분

	버스
		모든 데이터를 공유 (1회) (동축 케이블)

		장점 : 만들기 편함
		
		단점 : 중간에 한개라도 고장나면 랜이 맛감 고치기 힘듬

	스타
		허브(스위치)에서 정보를 받고 나누어줌 (UTP, 인터넷선)
		
		허브 ->  물리 : 스타 논리 버스
		
		스위치 -> 물리 : 스타  논리 : 스타

		장점(물리적으로)
			
		허브가 고장나지 않으면 유지댐

		허브가 고장나면 망함
	
	링
		모든 데이터를 공유 (반복)

		중간에 고장나면  랜이 고장남 -> 이중 링 사용

		


	무선 토폴로지 (와이파이)

		엑세스 포인트 -> 셀 (데이터가 터지는 지역)


		물리 스타 , 논리 버스 ?(근데 항상 듣느게 아냐..?)


		장점 : 물리적 한계 x

		단점 : 엑세스 포인트 주변이여함
			보안이 약함

	
LAN architecture : 어떤 규칙으로 숭수신 하는가

	이더넷 : 산업 표준, (전송속도) Base (전송매체)

		CSMA : 사용 중인지 체크 (CS, carrier Sense) , 모든 매체는 동일한 권한(MA, multiple acess) 평-등
		
		CD : 충돌 체크 (collision detection) 충...돌...체...크...ㅅ....

		장점 : 싸고 구현 편하고 성능도 좋다

		단점 : 연결된게 많으면 오류 확률이 증가한다 -> 적당히 연결

	
	무선 아키텍처

		IEEE 802.11(wifi), WLAN
			
			충돌을 미연에 방지

		IEEE 802.15 블투 투스

			마스터가 먼저 물어보기 전에는 맘대로 보낼 수 없음 >  데이터가 많으면 지연 유발

		HomeRf
			TDMA 나누고 동시에 보낼수 있다 (시간별로 짤라서, 중요한데)

			CSMA/CA 현제 전송 중인지 체크/동일한 권한/ 충돌을 회피(collision aviodance)

	

	fddi -> 광케이블 인터페이스 요즘은 기가 이더넷씀	

	ATM -> 밸랩에서 만든건데 이더넷이 너무 좋아서 안씀 ㅋ


LAN 연결장치

	repeater : 증폭기 잡음 제거, 신호 증폭 > 데이터 원상 복구 (L1)

	Hub : 컴퓨터와 서버를 브로드 캐스트로 연결
		물리계층 디바이스 (L1)

	Bridge 
		세그먼트 끼리 연결 시킴 (허브끼리 연결 시켯는데 여기 허브 없을 경우에만 넘김)

		로컬이 아닐경우에만 전송

		맥어드래스로 구분 > 맥 어드레스 디바이스

		데이터 링크 계층 (L2)


	swithces 개인 > 그룹(서버), 다리랑 비슷?, 사용자 지정해서 보낼수 있음

		동시에 작업 가능

		store and forward
			데이터를 다 받고 오류 체크 후 넘김 , 안전성

		cut through 
			오류체크 없이 보냄 			속도성

		데이터 링크 계층(L2)

 	
	라우터
		같은 프로토콜을 쓰는 네트워크끼리 연결 (인터넷, 인트라넷)

		네트워크의 최적 경로 제공, Load balancing

		브로드 캐스트를 막아줌

		OSI layer3 -> ip 사용

		다이나믹 라이팅

			그때 그때 좋은 경로로 보냄, 확장성 굿

		스택틱 라이팅

			고정, 보안, 빠름, 확장성 x, 설치 힘듬

	Gateway (게이트 웨이)
		다른거 끼리의 라우터

		질럿만 나오는게 아니잔



	아이피주소 (ipv4) 위치 고정 > 찾기 편하려고

	all ip 전세계 네트워크를 아이피 네트워크로?




	네트워크 벡본(척추)

	
		네크워크와 네크워크를 연결해주는 망, 아키텍처

		비용이 들더라도 고속, 대용량 을 옮길수 있는 아키텍처를 사용하는게 일반적, fddi > 10g이더넷

		고려해야할 점 2가지

			폴트 톨러란스 (오류 인내) : 문제가 생겨도 이동시킬수 없더라도 다른 길로 데이터를 우회해서라도 보낼 수 있어야함 

			로드 벨런싱 (적절히 적재하다): 여러 경로가 있으면 통ㄹ행량이 몰리지 않게 분산해서 처리한다 

						백본을 여러개를 설정한다.


랜 프로토콜

	프로토콜 -> 여러사람들이 모여서 이렇게 합시다 정해논 약속들을 모아둔 것을 프로토콜이라 부름




인터넷 프로토콜

	모든 디바이스들을 구별할 수 식별에 대해 약속 하기위해 사용한것

	-> 아이피 주소

	
	IPv4 			32bit - > 8비트로 나눠서 10진수로 바꿔서 사용
					유선 전화랑 비슷하게 되어이씀

					NWID 				
					NODEID
					바이트가 고정되지 않음?

					class a kt   1/3		구분 범위가 작다	네트워크 크기가 크다 	1			
					class b      2/2								10					
					class c 학교 3/1		구분 범위가 크다	네트워크 크기가 작다	110
					class d ip를 멀티 캐스트함   	                                                1110        
 					class e 확장을 위해서 남겨둠
					6에는 의미가 없다..


	서브넷 마스크 네트워크는 다 1 노드는 다 0
			
	IPv6			128bit ->  16번지 사용해서 표현
	
	NAT -> 임시방편 > 제한적인 환경에서만




아이피 주소를 할당하는 방법

	고정 아이피 


	유동 아이피 인터넷에 접속할 때마다 부여받는 아이피가 달라짐

			Dynamic Host Confiquraion P
			
			아이피를 동적 할당 해버렷

			부여 받지 못하면 들어갈 수 없음



네트워크 메니지먼트

	SNMP	기기랑 컨트롤 타워가 원격에서 장비 문제를 확인하고 데이터를 우회시키고 장비를 고치는 것 

		다 지원함 simple network menegement protocol

		

네트워크 운영체제(Network Operating Systems)
	서버 하드 웨어와 서버을 연결 시켜줌
	

과거에 네트워크 서비스를 사용한 이유

	비싼 하드웨어를 나눠 쓰기 위해서 >>  자원을 아끼기 위해
	요즘은 보안 문제 때문에? , 출력을 다 관리함

노밸 넷 웨어
	ip 지원을 늦게함
	망해서 리눅스로 먹고 삼

마이크로소프트 윈도우
	ip 지원을 빠르게 , exploer 강제 >>  세계 1등 부자로

리눅스
	유닉스의 작은 버전
	무료
	전공자는 적음

유닉스
	애초에 서버용 컴퓨터를 사용하기 위해 만들어진 nos
	CU > 사업용
	BSD > 학교, 연구용



보이스 네트워크
	소리를 보내기 위한 네트워크
	전기적인 신호로 바꾸어서 보내게 되어짐
	아날로그로 옛날 부터 있었음
	
	ptp(n-1만큼 선을 깔아야함 ㄷㄷ?) > switch(circuit NW)(교환기 끼리의 연결 1개만 굿) CO(전화 교환국) 굿
	연결을 독점함 > 시간 비례 돈
	국번, 지역번호 co<
	Pots ,Pstn 음성(public swiched Telephone Network) · 데이터 송수신을 위한 국제 전화 시스템 : 다른 주파수 진폭,위상으로 변조 -> 수신때 복조
	isdn (integrated Services Digital nw) 종합정보통신망. 단일 통신망으로 음성, 문자, 영상 등의 다양한 서비스를 종합적으로 제공하는 서비스.

	모뎀 : 디지텔 > 아날로그  아날로그 > 디지털

	PBX : 사설 교환기 = 내부 연락망
		돈을 아끼기 위해서 
		다른 보이스 네트워크도 옮겨 질수 있어야함

	IP도 묶으면 좋아욧

	voice over IP - > ip전화 -> 쌈 개꿀

셀룰러폰 핸드폰

	폰 키면 id를 셀타워에 전송 셀타워에서 네트워크 정보 받음

	전화 검 -> 셀타워 -> 이동 교환국(MSC) (찾는 폰이 있는 셀타워 찾) -> 셀타워 -> 폰

	어세스 메소드

	TDMA (시간별로 또 나눠서)
	C'D'MA(TDMA 업글) ->  다중주파수? call handoff, call signal reflection management
	FDMA -> 옛방식 (주파수별로 나눔)


	무선 데이터 서비스

	2 -> 2.5 -> 3 -> 4
마지막 과제는 자신 통신 요금 보는것		